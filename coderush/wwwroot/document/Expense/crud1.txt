<style>
    table {
        table-layout: fixed;
        width: 100%;
    }

        table td {
            word-wrap: break-word;
            overflow-wrap: break-word;
            height: 600%;
        }
</style>

<div class="container">
    <h2>ProjectMaster </h2>
    <div style="float: right;">
        <button type="button" id="add" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Add New ProjectMaster</button>
        <br />
        <br />
        <label>Search By Name</label>
        <input type="text" id="search" placeholder="  live search">
        @*@using (@Html.BeginForm())
            {
                <b>Name:</b>
                @Html.TextBox("searchTerm", null, new { id = "txtsearch" })



            }*@
        <br /><br />
    </div>
    <br /><br />
    <div id="tdds">
        <table class="table table-bordered table-hover" id="testtable">
            <thead>
                <tr>

                    <th style="width:300px">
                        ProjectName
                    </th>
                    <th>
                        Technologies
                    </th>
                    <th style="width:160px">
                        Description
                    </th>
                    <th>
                        ManagerId
                    </th>
                    <th style="width:200px">
                        DeveloperId
                    </th>

                    <th width: 150px>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody class="tbodytest" id="tbodytest">
            </tbody>
        </table>
    </div>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">Ã—</button>
                <h4 class="modal-title" id="myModalLabel">Add ProjectMaster</h4>
            </div>
            <div class="modal-body">
                <form>
                    @*<div class="form-group">
                            <label for="EmployeeId">ID</label>
                            <input type="text" class="form-control" id="EmployeeID" placeholder="Id" disabled="disabled" />
                        </div>*@
                    <input type="hidden" id="HdnId" />
                    <div class="form-group">
                        <label for="ProjectName">ProjectName</label>
                        <input type="text" class="form-control" id="txtProjectName" placeholder="Enter ProjectName" maxlength="30" />
                    </div>
                    <div class="form-group ">
                        <label for="Technologies">Technologies </label>
                        <select class="form-control" id="txtTechnologies" name="Technologies">
                            <option value="0">Select Technologies</option>
                            <option>.Net</option>
                            <option>Wordpress</option>
                            <option>React</option>
                            <option>Shopify</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="Description">Description</label>
                        <input type="text" class="form-control" id="txtDescription" placeholder="Enter Description" maxlength="30" />
                    </div>

                    <div class="form-group">
                        <label for="ManagerId">ManagerId</label>
                        <input type="text" class="form-control" id="txtManagerId" placeholder="Enter ManagerId" maxlength="30" />
                    </div>

                    <div class="form-group">
                        <label for="DeveloperId">DeveloperId</label>
                        <input type="text" class="form-control" id="txtDeveloperId" placeholder="Enter DeveloperId" maxlength="30" />
                    </div>


                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnAdd" onclick="Add();">Add</button>
                <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>





<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        loadData();
    });


    $("#add").click(function () {
        clearTextBox();
    });


    function loadData() {
        debugger
        $.ajax({
            url: "/ProjectMaster/List",
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result);
                debugger
                var html = '';
                $.each(result, function (key, item) {
                    html += '<tr>';
                    html += '<td>' + item.projectName + '</td>';
                    html += '<td>' + item.technologies + '</td>';
                    html += '<td>' + item.description + '</td>';
                    html += '<td>' + item.managerId + '</td>';
                    html += '<td>' + item.developerId + '</td>';

                    html += '<td><a href="#" onclick="return getbyID(' + item.id + ')">Edit</a> | <a href="#" onclick="Delele(' + item.id + ')">Delete</a></td>';
                    html += '</tr>';
                });
                debugger
                $('#tbodytest').html(html);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }




    function Add() {
        debugger
        var model = {
            ProjectName: $('#txtProjectName').val(),
            Technologies: $('#txtTechnologies').val(),
            Description: $('#txtDescription').val(),
            ManagerId: $('#txtManagerId').val(),
            DeveloperId: $('#txtDeveloperId').val()
        }
        $.ajax({
            type: "post",
            url: "/ProjectMaster/Add",
            data: model,
            datatype: "json",
            cache: false,
            success: function (data) {
                debugger
                loadData();
                $('#myModal').modal('hide');
                alert("You Multiple Data Passed Successfully");
            },
            error: function (xhr) {
                alert('No Valid Data');
            }
        });

        //debugger
        //var datapass = {
        //    ProjectName: $('#txtProjectName').val(),
        //    Technologies: $('#txtTechnologies').val(),
        //    Description: $('#txtDescription').val(),
        //    ManagerId: $('#txtManagerId').val(),
        //    DeveloperId: $('#txtDeveloperId').val()

        //};
        //$.ajax({

        //    url: "ProjectMaster/Add",
        //    data: JSON.stringify(emp),
        //    type: "POST",
        //    contentType: "application/json;charset=utf-8",
        //    dataType: "json",
        //    success: function (result) {
        //        loadData();
        //        $('#myModal').modal('hide');
        //    },
        //    error: function (errormessage) {
        //        alert(errormessage.responseText);
        //    }
    }

    function Delele(ID) {
        var ans = confirm("Are you sure you want to delete this Record?");
        if (ans) {
            $.ajax({
                url: "ProjectMaster/Delete/" + ID,
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    loadData();


                },
                error: function (errormessage) {
                    alert(errormessage.responseText);

                }

            });
        }
        location.reload(true);
    }

    function getbyID(EmpID) {
        debugger
        $('#txtProjectName').css('border-color', 'lightgrey');
        $('#txtTechnologies').css('border-color', 'lightgrey');
        $('#txtDescription').css('border-color', 'lightgrey');
        $('#txtManagerId').css('border-color', 'lightgrey');
        $('#txtDeveloperId').css('border-color', 'lightgrey');

        $.ajax({
            url: "/ProjectMaster/getbyID?ID=" + EmpID,
            typr: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: function (result) {
                debugger
                $('#HdnId').val(result.id);
                $('#txtProjectName').val(result.projectName);
                $('#txtTechnologies').val(result.technologies);
                $('#txtDescription').val(result.description);
                $('#txtManagerId').val(result.managerId)
                $('#txtDeveloperId').val(result.developerId)
                $('#myModal').modal('show');
                $('#btnUpdate').show();
                $('#btnAdd').hide();

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function Update() {
        debugger
        var empObj = {
            Id: $('#HdnId').val(),
            ProjectName: $('#txtProjectName').val(),
            Technologies: $('#txtTechnologies').val(),
            Description: $('#txtDescription').val(),
            ManagerId: $('#txtManagerId').val(),
            DeveloperId: $('#txtDeveloperId').val(),
        };
        $.ajax({
            url: "/ProjectMaster/Update",
            data: JSON.stringify(empObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result)
                loadData();
                $('#myModal').modal('hide');
                $('#HdnId').val("");
                $('#txtProjectName').val("");
                $('#txtTechnologies').val("");
                $('#txtDescription').val("");
                $('#txtManagerId').val("");
                $('#txtDeveloperId').val("");
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
        location.reload(true);
    }

    //$(document).ready(function () {
    //    $('#search').keyup(function () {
    //        search_table($(this).val());
    //    });
    //    function search_table(value) {
    //        $('#testtable tr').each(function () {
    //            var found = 'false';
    //            $(this).each(function () {
    //                if ($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0) {
    //                    found = 'true';
    //                }
    //            });
    //            if (found == 'true') {
    //                $(this).show();
    //            }
    //            else {
    //                $(this).hide();
    //            }
    //        });
    //    }
    //});

    function clearTextBox() {
        $('#HdnId').val("");
        $('#txtProjectName').val("");
        $('#txtTechnologies').val("");
        $('#txtDescription').val("");
        $('#txtManagerId').val("");
        $('#txtDeveloperId').val("");
        $('#btnUpdate').hide();
        $('#btnAdd').show();
        $('#txtProjectName').css('border-color', 'lightgrey');
        $('#txtTechnologies').css('border-color', 'lightgrey');
        $('#txtDescription').css('border-color', 'lightgrey');
        $('#txtManagerId').css('border-color', 'lightgrey');
        $('#txtDeveloperId').css('border-color', 'lightgrey');
    }





</script>





using DemoCreate.Data;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace DemoCreate.Controllers
{
    public class ProjectMasterController : Controller
    {
        private readonly ApplicationDbContext _db;
        public ProjectMasterController(ApplicationDbContext db)
        {
            _db = db;
        }
        public IActionResult Projectmaster()
        {
            return View();
        }
        [HttpGet]
        public JsonResult List()
        {
            return Json(ListAll());
        }

        [HttpGet]
        public List<Project_Master> ListAll()
        {
            var list = _db.Project_Master.ToList();
            return list;
        }
        [HttpPost]
        public JsonResult Add(Project_Master emp)
          {
            try
            {
                DateTime dateTime = DateTime.UtcNow.Date;
                var datadetails = new Project_Master()
                {
                    ProjectName = emp.ProjectName,
                    Technologies = emp.Technologies,
                    Description = emp.Description,
                    ManagerId=emp.ManagerId,
                    DeveloperId=emp.DeveloperId,
                    Isactive = true,
                    CreditedBy = emp.CreditedBy,
                    UpdatedDate = DateTime.Now,
                    CreditedDaye=DateTime.Now,
                };
                _db.Project_Master.Add(datadetails);
                _db.SaveChanges();
            }
            catch (Exception ex)
            {
                return Json(ex.Message);
            }
            
            return Json("Data add successfully");

        }
        [HttpGet]
        public JsonResult GetbyID(int ID)
        {
            var REC = _db.Project_Master.Where(x => x.Id == ID).FirstOrDefault();
            return Json(REC);
        }

        public JsonResult Delete(int ID)
        {
            var data = _db.Project_Master.Where(x => x.Id == ID).FirstOrDefault();
            if (data != null)
            {
                data.Isdelete = false;
                data.Isactive = true;
                _db.Project_Master.Remove(data);
                _db.SaveChanges();
            }

            return Json("Data delete successfully");
        }

        [HttpPost]
        public JsonResult Update(Project_Master emp)
        {
            var rec = _db.Project_Master.Where(x => x.Id == emp.Id).FirstOrDefault();
            if (rec != null)
            {
                rec.ProjectName = emp.ProjectName;
                rec.Technologies = emp.Technologies;
                rec.Description = emp.Description;
                rec.Isactive = true;
                rec.UpdatedBy = emp.UpdatedBy;
                rec.UpdatedDate = emp.UpdatedDate;
            }
            _db.Project_Master.Update(rec);
            _db.SaveChanges();
            return Json("Data update successfully.");
        }
    }
}